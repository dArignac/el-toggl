name: Test and Release

on:
  push

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache npm
      uses: actions/cache@v3
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16.14.2

    - name: Install packages
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci
    
    - name: Run tests
      run: npm run test:coverage

    - name: Report coverage
      uses: paambaati/codeclimate-action@v3.0.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPORTER_ID }}
  
  release:
    needs: build

    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    if: |
      startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16.14.2

    - name: Install packages
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci

    # create release including tags, only once on ubuntu
    - name: Release
      if: matrix.os == 'ubuntu-latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release --dry-run
    
    # TODO build the tauri binary for the current os
    # TODO attach the binary to the tag